package ir.syrent.nms.accessors;

import java.lang.Class;
import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.Collection;

/**
 * Class generated by NMS Mapper.
 * <p>
 * This class is a reflection accessor for net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket
 *
 * @since 2023-10-01 13:06:03
 */
public class ClientboundPlayerInfoUpdatePacketAccessor {
  /**
   * This method returns the {@link Class} object of the requested NMS class.
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the resolved class object or null if the class does not exist
   */
  public static Class<?> getType() {
    return AccessorUtils.getType(ClientboundPlayerInfoUpdatePacketAccessor.class, mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.19.3", "net.minecraft.src.C_243593_"); // 1.19.3 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.19.3", "net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket"); // 1.19.3 - 1.20.2

        });
  }

  /**
   * This method returns the {@link Constructor} object of the requested NMS constructor.
   * <p>
   * Requested constructor: (net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket$Action, net.minecraft.server.level.ServerPlayer)
   * <p>
   * Present in versions: 1.20.2, 1.20.1, 1.20, 1.19.4, 1.19.3
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the resolved constructor object or null if either class does not exist or it does not have this constructor in the specific environment
   */
  public static Constructor<?> getConstructor0() {
    return AccessorUtils.getConstructor(ClientboundPlayerInfoUpdatePacketAccessor.class, 0, ClientboundPlayerInfoUpdatePacket_i_ActionAccessor.getType(), ServerPlayerAccessor.getType());
  }

  /**
   * This method returns the {@link Method} object of the requested NMS method.
   * <p>
   * Requested method: createPlayerInitializing, mapping: mojang
   * Parameters of requested method: (java.util.Collection)
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the method object or null if either class does not exist or it does not have this field in the specific environment
   */
  public static Method getMethodCreatePlayerInitializing1() {
    return AccessorUtils.getMethod(ClientboundPlayerInfoUpdatePacketAccessor.class, "createPlayerInitializing1", mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.19.3", "m_247122_"); // 1.19.3 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.19.3", "a"); // 1.19.3 - 1.20.2

        }, Collection.class);
  }

  /**
   * This method returns the {@link Field} object of the requested NMS field.
   * <p>
   * Requested field: entries, mapping: mojang
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the resolved field object or null if either class does not exist or it does not have this field in the specific environment
   */
  public static Field getFieldEntries() {
    return AccessorUtils.getField(ClientboundPlayerInfoUpdatePacketAccessor.class, "entries1", mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.19.3", "f_244436_"); // 1.19.3 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.19.3", "b"); // 1.19.3 - 1.20.2

        });
  }

  /**
   * This method returns the {@link Method} object of the requested NMS method.
   * <p>
   * Requested method: entries, mapping: mojang
   * Parameters of requested method: ()
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the method object or null if either class does not exist or it does not have this field in the specific environment
   */
  public static Method getMethodEntries1() {
    return AccessorUtils.getMethod(ClientboundPlayerInfoUpdatePacketAccessor.class, "entries1", mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.19.3", "m_246778_"); // 1.19.3 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.19.3", "c"); // 1.19.3 - 1.20.1
          mapper.map("SPIGOT", "1.20.2", "d"); // 1.20.2

        });
  }
}
