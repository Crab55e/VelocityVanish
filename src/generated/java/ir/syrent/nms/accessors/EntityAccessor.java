package ir.syrent.nms.accessors;

import java.lang.Class;
import java.lang.reflect.Method;

/**
 * Class generated by NMS Mapper.
 * <p>
 * This class is a reflection accessor for net.minecraft.world.entity.Entity
 *
 * @since 2023-10-01 13:06:03
 */
public class EntityAccessor {
  /**
   * This method returns the {@link Class} object of the requested NMS class.
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the resolved class object or null if the class does not exist
   */
  public static Class<?> getType() {
    return AccessorUtils.getType(EntityAccessor.class, mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.8.8", "net.minecraft.entity.Entity"); // 1.8.8 - 1.16.5
          mapper.map("SEARGE", "1.17", "net.minecraft.src.C_507_"); // 1.17 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.8.8", "net.minecraft.server.${V}.Entity"); // 1.8.8 - 1.16.5
          mapper.map("SPIGOT", "1.17", "net.minecraft.world.entity.Entity"); // 1.17 - 1.20.2

        });
  }

  /**
   * This method returns the {@link Method} object of the requested NMS method.
   * <p>
   * Requested method: getUUID, mapping: mojang
   * Parameters of requested method: ()
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the method object or null if either class does not exist or it does not have this field in the specific environment
   */
  public static Method getMethodGetUUID1() {
    return AccessorUtils.getMethod(EntityAccessor.class, "getUUID1", mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.8.8", "func_110124_au"); // 1.8.8 - 1.16.5
          mapper.map("SEARGE", "1.17", "m_142081_"); // 1.17 - 1.18.2
          mapper.map("SEARGE", "1.19", "m_20148_"); // 1.19 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.8.8", "getUniqueID"); // 1.8.8 - 1.17.1
          mapper.map("SPIGOT", "1.18", "cm"); // 1.18 - 1.18.2
          mapper.map("SPIGOT", "1.19", "cp"); // 1.19
          mapper.map("SPIGOT", "1.19.1", "co"); // 1.19.1 - 1.19.2
          mapper.map("SPIGOT", "1.19.3", "cs"); // 1.19.3 - 1.19.4
          mapper.map("SPIGOT", "1.20", "ct"); // 1.20 - 1.20.1
          mapper.map("SPIGOT", "1.20.2", "cv"); // 1.20.2

        });
  }
}
