package ir.syrent.nms.accessors;

import java.lang.Class;
import java.lang.Object;
import java.lang.String;
import java.lang.reflect.Method;

/**
 * Class generated by NMS Mapper.
 * <p>
 * This class is a reflection accessor for net.minecraft.world.level.GameType
 *
 * @since 2023-10-01 13:06:03
 */
public class GameTypeAccessor {
  /**
   * This method returns the {@link Class} object of the requested NMS class.
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the resolved class object or null if the class does not exist
   */
  public static Class<?> getType() {
    return AccessorUtils.getType(GameTypeAccessor.class, mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.10", "net.minecraft.world.GameType"); // 1.10 - 1.16.5
          mapper.map("SEARGE", "1.17", "net.minecraft.src.C_1593_"); // 1.17 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.10", "net.minecraft.server.${V}.EnumGamemode"); // 1.10 - 1.16.5
          mapper.map("SPIGOT", "1.17", "net.minecraft.world.level.EnumGamemode"); // 1.17 - 1.20.2

        });
  }

  /**
   * This method returns the value of an enum constant or a static final field of the requested NMS field.
   * <p>
   * Requested field: SURVIVAL, mapping: mojang
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the value of the field or null if it cannot be resolved for any reason
   */
  public static Object getFieldSURVIVAL() {
    return AccessorUtils.getEnumField(GameTypeAccessor.class, "SURVIVAL1", mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.10", "SURVIVAL"); // 1.10 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.10", "SURVIVAL"); // 1.10 - 1.16.5
          mapper.map("SPIGOT", "1.17", "a"); // 1.17 - 1.20.2

        });
  }

  /**
   * This method returns the value of an enum constant or a static final field of the requested NMS field.
   * <p>
   * Requested field: CREATIVE, mapping: mojang
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the value of the field or null if it cannot be resolved for any reason
   */
  public static Object getFieldCREATIVE() {
    return AccessorUtils.getEnumField(GameTypeAccessor.class, "CREATIVE1", mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.10", "CREATIVE"); // 1.10 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.10", "CREATIVE"); // 1.10 - 1.16.5
          mapper.map("SPIGOT", "1.17", "b"); // 1.17 - 1.20.2

        });
  }

  /**
   * This method returns the value of an enum constant or a static final field of the requested NMS field.
   * <p>
   * Requested field: SPECTATOR, mapping: mojang
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the value of the field or null if it cannot be resolved for any reason
   */
  public static Object getFieldSPECTATOR() {
    return AccessorUtils.getEnumField(GameTypeAccessor.class, "SPECTATOR1", mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.10", "SPECTATOR"); // 1.10 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.10", "SPECTATOR"); // 1.10 - 1.16.5
          mapper.map("SPIGOT", "1.17", "d"); // 1.17 - 1.20.2

        });
  }

  /**
   * This method returns the value of an enum constant or a static final field of the requested NMS field.
   * <p>
   * Requested field: ADVENTURE, mapping: mojang
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the value of the field or null if it cannot be resolved for any reason
   */
  public static Object getFieldADVENTURE() {
    return AccessorUtils.getEnumField(GameTypeAccessor.class, "ADVENTURE1", mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.10", "ADVENTURE"); // 1.10 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.10", "ADVENTURE"); // 1.10 - 1.16.5
          mapper.map("SPIGOT", "1.17", "c"); // 1.17 - 1.20.2

        });
  }

  /**
   * This method returns the {@link Method} object of the requested NMS method.
   * <p>
   * Requested method: byName, mapping: mojang
   * Parameters of requested method: (java.lang.String)
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the method object or null if either class does not exist or it does not have this field in the specific environment
   */
  public static Method getMethodByName1() {
    return AccessorUtils.getMethod(GameTypeAccessor.class, "byName1", mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.14", "func_77142_a"); // 1.14 - 1.16.5
          mapper.map("SEARGE", "1.17", "m_46400_"); // 1.17 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.14", "a"); // 1.14 - 1.20.2

        }, String.class);
  }
}
