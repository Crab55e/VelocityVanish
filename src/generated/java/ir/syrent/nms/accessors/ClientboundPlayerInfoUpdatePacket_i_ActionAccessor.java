package ir.syrent.nms.accessors;

import java.lang.Class;
import java.lang.Object;

/**
 * Class generated by NMS Mapper.
 * <p>
 * This class is a reflection accessor for net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket$Action
 *
 * @since 2023-10-01 13:06:03
 */
public class ClientboundPlayerInfoUpdatePacket_i_ActionAccessor {
  /**
   * This method returns the {@link Class} object of the requested NMS class.
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the resolved class object or null if the class does not exist
   */
  public static Class<?> getType() {
    return AccessorUtils.getType(ClientboundPlayerInfoUpdatePacket_i_ActionAccessor.class, mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.19.3", "net.minecraft.src.C_243593_$C_243543_"); // 1.19.3 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.19.3", "net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket$a"); // 1.19.3 - 1.20.2

        });
  }

  /**
   * This method returns the value of an enum constant or a static final field of the requested NMS field.
   * <p>
   * Requested field: UPDATE_GAME_MODE, mapping: mojang
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the value of the field or null if it cannot be resolved for any reason
   */
  public static Object getFieldUPDATE_GAME_MODE() {
    return AccessorUtils.getEnumField(ClientboundPlayerInfoUpdatePacket_i_ActionAccessor.class, "UPDATE_GAME_MODE1", mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.19.3", "UPDATE_GAME_MODE"); // 1.19.3 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.19.3", "c"); // 1.19.3 - 1.20.2

        });
  }

  /**
   * This method returns the value of an enum constant or a static final field of the requested NMS field.
   * <p>
   * Requested field: ADD_PLAYER, mapping: mojang
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the value of the field or null if it cannot be resolved for any reason
   */
  public static Object getFieldADD_PLAYER() {
    return AccessorUtils.getEnumField(ClientboundPlayerInfoUpdatePacket_i_ActionAccessor.class, "ADD_PLAYER1", mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.19.3", "ADD_PLAYER"); // 1.19.3 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.19.3", "a"); // 1.19.3 - 1.20.2

        });
  }
}
