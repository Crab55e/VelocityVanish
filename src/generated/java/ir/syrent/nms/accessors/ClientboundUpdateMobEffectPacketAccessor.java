package ir.syrent.nms.accessors;

import java.lang.Class;
import java.lang.reflect.Constructor;

/**
 * Class generated by NMS Mapper.
 * <p>
 * This class is a reflection accessor for net.minecraft.network.protocol.game.ClientboundUpdateMobEffectPacket
 *
 * @since 2023-10-01 13:06:03
 */
public class ClientboundUpdateMobEffectPacketAccessor {
  /**
   * This method returns the {@link Class} object of the requested NMS class.
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the resolved class object or null if the class does not exist
   */
  public static Class<?> getType() {
    return AccessorUtils.getType(ClientboundUpdateMobEffectPacketAccessor.class, mapper -> {

          /* SEARGE */
          mapper.map("SEARGE", "1.8.8", "net.minecraft.network.play.server.S1DPacketEntityEffect"); // 1.8.8
          mapper.map("SEARGE", "1.9", "net.minecraft.network.play.server.SPacketEntityEffect"); // 1.9 - 1.13.2
          mapper.map("SEARGE", "1.14", "net.minecraft.network.play.server.SPlayEntityEffectPacket"); // 1.14 - 1.16.5
          mapper.map("SEARGE", "1.17", "net.minecraft.src.C_5139_"); // 1.17 - 1.20.2

          /* SPIGOT */
          mapper.map("SPIGOT", "1.8.8", "net.minecraft.server.${V}.PacketPlayOutEntityEffect"); // 1.8.8 - 1.16.5
          mapper.map("SPIGOT", "1.17", "net.minecraft.network.protocol.game.PacketPlayOutEntityEffect"); // 1.17 - 1.20.2

        });
  }

  /**
   * This method returns the {@link Constructor} object of the requested NMS constructor.
   * <p>
   * Requested constructor: (int, net.minecraft.world.effect.MobEffectInstance)
   * <p>
   * Present in versions: 1.20.2, 1.20.1, 1.20, 1.19.4, 1.19.3, 1.19.2, 1.19.1, 1.19, 1.18.2, 1.18.1, 1.18, 1.17.1, 1.17, 1.16.5, 1.16.4, 1.16.3, 1.16.2, 1.16.1, 1.15.2, 1.15.1, 1.15, 1.14.4, 1.14.3, 1.14.2, 1.14.1, 1.14, 1.13.2, 1.13.1, 1.13, 1.12.2, 1.12.1, 1.12, 1.11.2, 1.11.1, 1.11, 1.10.2, 1.10, 1.9.4, 1.9.2, 1.9, 1.8.8
   * <p>
   * This method is safe to call: exception is handled and null is returned in case of failure.
   *
   * @return the resolved constructor object or null if either class does not exist or it does not have this constructor in the specific environment
   */
  public static Constructor<?> getConstructor0() {
    return AccessorUtils.getConstructor(ClientboundUpdateMobEffectPacketAccessor.class, 0, int.class, MobEffectInstanceAccessor.getType());
  }
}
